{"version":3,"sources":["Format.js","Cards.js","App.js","reportWebVitals.js","index.js"],"names":["clearNumber","value","replace","formatCreditCardNumber","nextValue","issuer","Payment","fns","cardType","clearValue","slice","trim","formatCVC","allValues","maxLength","number","formatExpirationDate","length","Cards","state","name","expiry","cvc","focused","formData","handleInputFocus","target","setState","handleInputChange","handleSubmit","event","preventDefault","elements","filter","data","reduce","acc","form","reset","this","className","callback","handleCallback","ref","c","onSubmit","type","placeholder","pattern","required","onChange","onFocus","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bf0187e.chunk.js","sourcesContent":["import Payment from \"payment\";\r\n\r\nfunction clearNumber(value = \"\") {\r\n  return value.replace(/\\D+/g, \"\");\r\n}\r\n\r\nexport function formatCreditCardNumber(value) {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n\r\n  const issuer = Payment.fns.cardType(value);\r\n  const clearValue = clearNumber(value);\r\n  let nextValue;\r\n\r\n  switch (issuer) {\r\n    case \"amex\":\r\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\r\n        4,\r\n        10\r\n      )} ${clearValue.slice(10, 15)}`;\r\n      break;\r\n    case \"dinersclub\":\r\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\r\n        4,\r\n        10\r\n      )} ${clearValue.slice(10, 14)}`;\r\n      break;\r\n    default:\r\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\r\n        4,\r\n        8\r\n      )} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 19)}`;\r\n      break;\r\n  }\r\n\r\n  return nextValue.trim();\r\n}\r\n\r\nexport function formatCVC(value, allValues = {}) {\r\n  const clearValue = clearNumber(value);\r\n  let maxLength = 4;\r\n\r\n  if (allValues.number) {\r\n    const issuer = Payment.fns.cardType(allValues.number);\r\n    maxLength = issuer === \"amex\" ? 4 : 3;\r\n  }\r\n\r\n  return clearValue.slice(0, maxLength);\r\n}\r\n\r\nexport function formatExpirationDate(value) {\r\n  const clearValue = clearNumber(value);\r\n\r\n  if (clearValue.length >= 3) {\r\n    return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`;\r\n  }\r\n\r\n  return clearValue;\r\n}\r\n\r\nexport function formatFormData(data) {\r\n  return Object.keys(data).map(d => `${d}: ${data[d]}`);\r\n}\r\n","import React from \"react\";\r\nimport Card from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\nimport \"./style.css\";\r\n\r\nimport {\r\n  formatCreditCardNumber,\r\n  formatCVC,\r\n  formatExpirationDate,\r\n} from \"./Format\";\r\n\r\nclass Cards extends React.Component {\r\n  state = {\r\n    number: \"\",\r\n    name: \"\",\r\n    expiry: \"\",\r\n    cvc: \"\",\r\n    focused: \"\",\r\n    formData: null\r\n  };\r\n\r\n  handleInputFocus = ({ target }) => {\r\n    this.setState({\r\n      focused: target.name\r\n    });\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    if (target.name === \"number\") {\r\n      target.value = formatCreditCardNumber(target.value);\r\n    } else if (target.name === \"expiry\") {\r\n      target.value = formatExpirationDate(target.value); \r\n    } else if (target.name === \"cvc\") {\r\n      target.value = formatCVC(target.value);\r\n    } \r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const formData = [...event.target.elements]\r\n      .filter(data => data.name)\r\n      .reduce((acc, data) => {\r\n        acc[data.name] = data.value;\r\n        return acc;\r\n      }, {});\r\n    this.setState({ formData });\r\n    this.form.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number, expiry, cvc, focused } = this.state;\r\n\r\n    return (\r\n      <div key=\"Payment\" className=\"credit-card-box\">\r\n        <div className=\"credit-card-form\">\r\n     \r\n          <h1>Stomble App</h1>\r\n          <h4>Inser Your Credit Card</h4>\r\n          <Card\r\n            number={number}\r\n            name={name}\r\n            expiry={expiry}\r\n            cvc={cvc}\r\n            focused={focused}\r\n            callback={this.handleCallback}\r\n          />\r\n          <form ref={c => (this.form = c)} onSubmit={this.handleSubmit}>\r\n          <div className=\"card-label\">\r\n                <label className=\"column\">Card Number</label>\r\n          </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Your Card Number\"\r\n                pattern=\"[\\d| ]{16,22}\"\r\n                required\r\n                onChange={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <div className=\"card-label\">\r\n                <label className=\"column\">Card Name</label>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"form-control\"\r\n                placeholder=\"Your Name on Card\"\r\n                required\r\n                onChange={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n            </div>\r\n        \r\n              <div className=\"row\">   \r\n                <label className=\"col card-label\">Expiration Date</label>\r\n                <label className=\"col card-cvc\">CVC</label>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n              <div className = \"col-6\">\r\n                <input\r\n                  type = \"tel\"\r\n                  name = \"expiry\"\r\n                  className = \"form-control\"\r\n                  placeholder = \"MM/YY\"\r\n                  pattern=\"\\d\\d/\\d\\d\"\r\n                  required \r\n                  onChange = {this.handleInputChange}\r\n                  onFocus = {this.handleInputFocus}\r\n                  />\r\n              </div>\r\n         \r\n              <div className=\"col-6\">\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"cvc\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"CVC\"\r\n                  pattern=\"\\d{3,4}\"\r\n                  required\r\n                  onChange={this.handleInputChange}\r\n                  onFocus={this.handleInputFocus}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-check\">\r\n              <input type=\"checkbox\" className=\"form-check-input\"/>\r\n              <label className=\"form-check-label\">Make it default card</label>\r\n            </div>\r\n            \r\n            <div className=\"form-actions\">\r\n              <button className=\"btn btn-primary btn-block\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","import './App.css';\nimport Cards from './Cards'\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cards/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}